apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: hnc-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.8
  name: hierarchyconfigurations.hnc.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: Cg==
      service:
        name: hnc-webhook-service
        namespace: hnc-system
        path: /convert
  group: hnc.x-k8s.io
  names:
    kind: HierarchyConfiguration
    listKind: HierarchyConfigurationList
    plural: hierarchyconfigurations
    singular: hierarchyconfiguration
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: Hierarchy is the Schema for the hierarchies API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              enum:
                - hierarchy
              type: string
          type: object
        spec:
          description: HierarchySpec defines the desired state of Hierarchy
          properties:
            allowCascadingDeletion:
              description: AllowCascadingDeletion indicates if the subnamespaces of this namespace are allowed to cascading delete.
              type: boolean
            parent:
              description: Parent indicates the parent of this namespace, if any.
              type: string
          type: object
        status:
          description: HierarchyStatus defines the observed state of Hierarchy
          properties:
            children:
              description: Children indicates the direct children of this namespace, if any.
              items:
                type: string
              type: array
            conditions:
              description: Conditions describes the errors, if any.
              items:
                description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                properties:
                  lastTransitionTime:
                    description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: message is a human readable message indicating details about the transition. This may be an empty string.
                    maxLength: 32768
                    type: string
                  observedGeneration:
                    description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                    format: int64
                    minimum: 0
                    type: integer
                  reason:
                    description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                    maxLength: 1024
                    minLength: 1
                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    type: string
                  status:
                    description: status of the condition, one of True, False, Unknown.
                    enum:
                      - "True"
                      - "False"
                      - Unknown
                    type: string
                  type:
                    description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                    maxLength: 316
                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    type: string
                required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                type: object
              type: array
          type: object
      type: object
  version: v1alpha2
  versions:
    - name: v1alpha2
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: [ ]
  storedVersions: [ ]
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.8
  name: hncconfigurations.hnc.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: Cg==
      service:
        name: hnc-webhook-service
        namespace: hnc-system
        path: /convert
  group: hnc.x-k8s.io
  names:
    kind: HNCConfiguration
    listKind: HNCConfigurationList
    plural: hncconfigurations
    singular: hncconfiguration
  preserveUnknownFields: false
  scope: Cluster
  validation:
    openAPIV3Schema:
      description: HNCConfiguration is a cluster-wide configuration for HNC as a whole. See details in http://bit.ly/hnc-type-configuration
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          properties:
            name:
              enum:
                - config
              type: string
          type: object
        spec:
          description: HNCConfigurationSpec defines the desired state of HNC configuration.
          properties:
            resources:
              description: Resources defines the cluster-wide settings for resource synchronization. Note that 'roles' and 'rolebindings' are pre-configured by HNC with 'Propagate' mode and are omitted in the spec. Any configuration of 'roles' or 'rolebindings' are not allowed. To learn more, see https://github.com/kubernetes-sigs/multi-tenancy/blob/master/incubator/hnc/docs/user-guide/how-to.md#admin-types
              items:
                description: ResourceSpec defines the desired synchronization state of a specific resource.
                properties:
                  group:
                    description: Group of the resource defined below. This is used to unambiguously identify the resource. It may be omitted for core resources (e.g. "secrets").
                    type: string
                  mode:
                    description: Synchronization mode of the kind. If the field is empty, it will be treated as "Propagate".
                    enum:
                      - Propagate
                      - Ignore
                      - Remove
                    type: string
                  resource:
                    description: Resource to be configured.
                    type: string
                required:
                  - resource
                type: object
              type: array
          type: object
        status:
          description: HNCConfigurationStatus defines the observed state of HNC configuration.
          properties:
            conditions:
              description: Conditions describes the errors, if any. If there are any conditions with "ActivitiesHalted" reason, this means that HNC cannot function in the affected namespaces. The HierarchyConfiguration object in each of the affected namespaces will have more information. To learn more about conditions, see https://github.com/kubernetes-sigs/multi-tenancy/blob/master/incubator/hnc/docs/user-guide/concepts.md#admin-conditions.
              items:
                description: "Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, type FooStatus struct{     // Represents the observations of a foo's current state.     // Known .status.conditions.type are: \"Available\", \"Progressing\", and \"Degraded\"     // +patchMergeKey=type     // +patchStrategy=merge     // +listType=map     // +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"` \n     // other fields }"
                properties:
                  lastTransitionTime:
                    description: lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                    format: date-time
                    type: string
                  message:
                    description: message is a human readable message indicating details about the transition. This may be an empty string.
                    maxLength: 32768
                    type: string
                  observedGeneration:
                    description: observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
                    format: int64
                    minimum: 0
                    type: integer
                  reason:
                    description: reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
                    maxLength: 1024
                    minLength: 1
                    pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                    type: string
                  status:
                    description: status of the condition, one of True, False, Unknown.
                    enum:
                      - "True"
                      - "False"
                      - Unknown
                    type: string
                  type:
                    description: type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                    maxLength: 316
                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                    type: string
                required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                type: object
              type: array
            resources:
              description: Resources indicates the observed synchronization states of the resources.
              items:
                description: ResourceStatus defines the actual synchronization state of a specific resource.
                properties:
                  group:
                    description: The API group of the resource being synchronized.
                    type: string
                  mode:
                    description: Mode describes the synchronization mode of the kind. Typically, it will be the same as the mode in the spec, except when the reconciler has fallen behind or for resources with an enforced default synchronization mode, such as RBAC objects.
                    type: string
                  numPropagatedObjects:
                    description: Tracks the number of objects that are being propagated to descendant namespaces. The propagated objects are created by HNC.
                    minimum: 0
                    type: integer
                  numSourceObjects:
                    description: Tracks the number of objects that are created by users.
                    minimum: 0
                    type: integer
                  resource:
                    description: The resource being synchronized.
                    type: string
                  version:
                    description: The API version used by HNC when propagating this resource.
                    type: string
                required:
                  - group
                  - resource
                  - version
                type: object
              type: array
          type: object
      type: object
  version: v1alpha2
  versions:
    - name: v1alpha2
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: [ ]
  storedVersions: [ ]
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.2.8
  name: subnamespaceanchors.hnc.x-k8s.io
spec:
  conversion:
    strategy: Webhook
    webhookClientConfig:
      caBundle: Cg==
      service:
        name: hnc-webhook-service
        namespace: hnc-system
        path: /convert
  group: hnc.x-k8s.io
  names:
    kind: SubnamespaceAnchor
    listKind: SubnamespaceAnchorList
    plural: subnamespaceanchors
    shortNames:
      - subns
    singular: subnamespaceanchor
  preserveUnknownFields: false
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: SubnamespaceAnchor is the Schema for the subnamespace API. See details at http://bit.ly/hnc-self-serve-ux.
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        status:
          description: SubnamespaceAnchorStatus defines the observed state of SubnamespaceAnchor.
          properties:
            status:
              description: "Describes the state of the subnamespace anchor. \n Currently, the supported values are: \n - \"Missing\": the subnamespace has not been created yet. This should be the default state when the anchor is just created. \n - \"Ok\": the subnamespace exists. This is the only good state of the anchor. \n - \"Conflict\": a namespace of the same name already exists. The admission controller will attempt to prevent this. \n - \"Forbidden\": the anchor was created in a namespace that doesn't allow children, such as kube-system or hnc-system. The admission controller will attempt to prevent this."
              type: string
          type: object
      type: object
  version: v1alpha2
  versions:
    - name: v1alpha2
      served: true
      storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: [ ]
  storedVersions: [ ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hnc-leader-election-role
  namespace: hnc-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - configmaps/status
    verbs:
      - get
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: hnc-manager-role
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - create
      - delete
      - deletecollection
      - get
      - impersonate
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - hnc.x-k8s.io
    resources:
      - hierarchies
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - hnc.x-k8s.io
    resources:
      - hierarchies/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hnc-proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hnc-leader-election-rolebinding
  namespace: hnc-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: hnc-leader-election-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: hnc-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hnc-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hnc-manager-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: hnc-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hnc-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hnc-proxy-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: hnc-system
---
apiVersion: v1
kind: Secret
metadata:
  name: hnc-webhook-server-cert
  namespace: hnc-system
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: controller-manager
  name: hnc-controller-manager-metrics-service
  namespace: hnc-system
spec:
  ports:
    - name: https
      port: 8443
      targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: hnc-webhook-service
  namespace: hnc-system
spec:
  ports:
    - port: 443
      targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: hnc-controller-manager
  namespace: hnc-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
        - args:
            - --webhook-server-port=9443
            - --metrics-addr=:8080
            - --max-reconciles=10
            - --apiserver-qps-throttle=50
            - --enable-internal-cert-management
            - --cert-restart-on-secret-refresh
          command:
            - /manager
          image: hub.c.163.com/kubecube/hnc:v0.8.0 #harshthakur/hnc-manager:multi-arch
          name: manager
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8081
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 150Mi
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
        - args:
            - --upstream=http://127.0.0.1:8080/
            - --secure-listen-address=0.0.0.0:8443
            - --logtostderr=true
            - --v=10
          image: carlosedp/kube-rbac-proxy:v0.4.1  #hub.c.163.com/kubecube/hnc/kube-rbac-proxy:v0.4.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      terminationGracePeriodSeconds: 10
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: hnc-webhook-server-cert
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  name: hnc-validating-webhook-configuration
webhooks:
  - clientConfig:
      caBundle: Cg==
      service:
        name: hnc-webhook-service
        namespace: hnc-system
        path: /validate-hnc-x-k8s-io-v1alpha2-subnamespaceanchors
    failurePolicy: Fail
    name: subnamespaceanchors.hnc.x-k8s.io
    rules:
      - apiGroups:
          - hnc.x-k8s.io
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
          - DELETE
        resources:
          - subnamespaceanchors
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: hnc-webhook-service
        namespace: hnc-system
        path: /validate-hnc-x-k8s-io-v1alpha2-hierarchyconfigurations
    failurePolicy: Fail
    name: hierarchyconfigurations.hnc.x-k8s.io
    rules:
      - apiGroups:
          - hnc.x-k8s.io
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
          - UPDATE
        resources:
          - hierarchyconfigurations
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: hnc-webhook-service
        namespace: hnc-system
        path: /validate-hnc-x-k8s-io-v1alpha2-hncconfigurations
    failurePolicy: Fail
    name: hncconfigurations.hnc.x-k8s.io
    rules:
      - apiGroups:
          - hnc.x-k8s.io
        apiVersions:
          - v1alpha2
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - hncconfigurations
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: hnc-webhook-service
        namespace: hnc-system
        path: /validate-v1-namespace
    failurePolicy: Fail
    name: namespaces.hnc.x-k8s.io
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - DELETE
          - CREATE
          - UPDATE
        resources:
          - namespaces
    sideEffects: None
  - clientConfig:
      caBundle: Cg==
      service:
        name: hnc-webhook-service
        namespace: hnc-system
        path: /validate-objects
    failurePolicy: Ignore
    name: objects.hnc.x-k8s.io
    rules:
      - apiGroups:
          - '*'
        apiVersions:
          - '*'
        operations:
          - CREATE
          - UPDATE
          - DELETE
        resources:
          - '*'
    sideEffects: None
    timeoutSeconds: 2
